/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.salesmate.component;
import com.salesmate.model.Product;
import com.salesmate.controller.InvoiceController;
import com.salesmate.controller.ProductController;
import com.salesmate.controller.UserController;
import java.awt.Dimension;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Map;
import javax.swing.SwingUtilities;
/**
 *
 * @author meiln
 */
public class AdDashBoard extends javax.swing.JPanel {
    private InvoiceController invoiceController;
    private ProductController productController;
 private UserController userController;
    /**
     * Creates new form AdDashBoard
     */
    public AdDashBoard() {
        initComponents();
         invoiceController = new InvoiceController(); // Khởi tạo controller
        updateInvoiceCount(); // Cập nhật số lượng hóa đơn khi panel được khởi tạo
        
        productController = new ProductController(); // Khởi tạo controller
        updateProductCount(); // Cập nhật số lượng hóa đơn khi panel được khởi tạo
         updateBestSellingTable();
         
          userController = new UserController(); // Khởi tạo controller
        updateUserCount(); // Cập nhật số lượng hóa đơn khi panel được khởi tạo
        
        spBestSellingTable.addComponentListener(new ComponentAdapter() {
    @Override
    public void componentResized(ComponentEvent e) {
        resizeRowsToFill();
    }
                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spAdmin = new javax.swing.JScrollPane();
        panelAdmin = new javax.swing.JPanel();
        spBestSellingTable = new javax.swing.JScrollPane();
        tbBestSelling = new javax.swing.JTable();
        panelStatistic = new javax.swing.JPanel();
        panelUserCount = new javax.swing.JPanel();
        lblUserCount = new javax.swing.JLabel();
        panelProductCount = new javax.swing.JPanel();
        lblProductCount = new javax.swing.JLabel();
        panelInvoiceCount = new javax.swing.JPanel();
        lblInvoiceCount = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        revenueLineChart1 = new com.salesmate.component.RevenueLineChart();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        spAdmin.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        spAdmin.setToolTipText("");
        spAdmin.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        spAdmin.setViewportView(panelAdmin);

        spBestSellingTable.setBorder(null);

        tbBestSelling.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Tên sản phẩm", "Giá", "Số lượng bán"
            }
        ));
        tbBestSelling.setShowGrid(true);
        spBestSellingTable.setViewportView(tbBestSelling);

        panelStatistic.setLayout(new java.awt.GridLayout(1, 0));

        panelUserCount.setBackground(new java.awt.Color(204, 255, 255));

        lblUserCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUserCount.setText("slg user");

        javax.swing.GroupLayout panelUserCountLayout = new javax.swing.GroupLayout(panelUserCount);
        panelUserCount.setLayout(panelUserCountLayout);
        panelUserCountLayout.setHorizontalGroup(
            panelUserCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUserCountLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(lblUserCount)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        panelUserCountLayout.setVerticalGroup(
            panelUserCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUserCountLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblUserCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );

        panelStatistic.add(panelUserCount);

        panelProductCount.setBackground(new java.awt.Color(255, 204, 204));

        lblProductCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblProductCount.setText("slg product");

        javax.swing.GroupLayout panelProductCountLayout = new javax.swing.GroupLayout(panelProductCount);
        panelProductCount.setLayout(panelProductCountLayout);
        panelProductCountLayout.setHorizontalGroup(
            panelProductCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductCountLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(lblProductCount)
                .addGap(100, 100, 100))
        );
        panelProductCountLayout.setVerticalGroup(
            panelProductCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductCountLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lblProductCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46))
        );

        panelStatistic.add(panelProductCount);

        panelInvoiceCount.setBackground(new java.awt.Color(204, 255, 204));

        lblInvoiceCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblInvoiceCount.setText("slg hóa đơn");

        javax.swing.GroupLayout panelInvoiceCountLayout = new javax.swing.GroupLayout(panelInvoiceCount);
        panelInvoiceCount.setLayout(panelInvoiceCountLayout);
        panelInvoiceCountLayout.setHorizontalGroup(
            panelInvoiceCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInvoiceCountLayout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(lblInvoiceCount)
                .addGap(80, 80, 80))
        );
        panelInvoiceCountLayout.setVerticalGroup(
            panelInvoiceCountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInvoiceCountLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblInvoiceCount, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addGap(54, 54, 54))
        );

        panelStatistic.add(panelInvoiceCount);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("Doanh thu hôm nay");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        panelStatistic.add(jPanel1);

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin);
        panelAdmin.setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(revenueLineChart1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelStatistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spBestSellingTable))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addComponent(panelStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spBestSellingTable, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(revenueLineChart1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spAdmin.setViewportView(panelAdmin);

        add(spAdmin);
    }// </editor-fold>//GEN-END:initComponents
 private void updateInvoiceCount() {
        try {
            // Lấy số lượng hóa đơn từ controller
            int totalInvoices = invoiceController.countInvoices();
            // Cập nhật số lượng hóa đơn lên lblInvoiceCount
            lblInvoiceCount.setText("Số lượng hóa đơn: " + totalInvoices);
        } catch (Exception e) {
            e.printStackTrace();
            lblInvoiceCount.setText("Không thể lấy số lượng hóa đơn");
        }
 }
 
 private void updateProductCount() {
        try {
            // Lấy số lượng sản phẩm từ controller
            int totalProduct = productController.countProduct();
            // Cập nhật số lượng hóa đơn lên lblProductCount
            lblProductCount.setText("Số lượng sản phẩm: " + totalProduct);
        } catch (Exception e) {
            e.printStackTrace();
            lblProductCount.setText("Không thể lấy số lượng sản phẩm");
        }
 }
 
  private void updateUserCount() {
        try {
            // Lấy số lượng user từ controller
            int totalUser = userController.countUser();
            // Cập nhật số lượng user lên lbluserCount
            lblUserCount.setText("Số lượng nhân viên: " + totalUser);
        } catch (Exception e) {
            e.printStackTrace();
            lblUserCount.setText("Không thể lấy số lượng nhân viên");
        }
 }
  
// Cập nhật bảng sản phẩm bán chạy nhất
private void updateBestSellingTable() {
    try {
        List<Map<String, Object>> topSellingProducts = productController.getTopSellingProducts();
        DefaultTableModel model = (DefaultTableModel) tbBestSelling.getModel();
        model.setRowCount(0);

        for (int i = 0; i < topSellingProducts.size(); i++) {
            Map<String, Object> productData = topSellingProducts.get(i);
            model.addRow(new Object[]{
                i + 1,
                productData.get("product_name"),
                productData.get("price"),
                productData.get("total_sold")
            });
        }

        // Sau khi fill dữ liệu, yêu cầu Swing cập nhật rowHeight
        SwingUtilities.invokeLater(this::resizeRowsToFill);

    } catch (Exception e) {
        e.printStackTrace();
    }
}

/**
 * Chia đều phần chiều cao viewport (trừ header) cho tất cả các row.
 */
private void resizeRowsToFill() {
    int rowCount = tbBestSelling.getRowCount();
    if (rowCount <= 0) return;

    // Lấy chiều cao viewport (phần hiển thị các hàng)
    int viewportHeight = spBestSellingTable.getViewport().getHeight();
    int headerHeight   = tbBestSelling.getTableHeader().getHeight();
    int available      = viewportHeight - headerHeight;
    if (available <= 0) return;

    // Chia đều cho từng row
    int rowHeight = available / rowCount;
    if (rowHeight < 1) rowHeight = 1;
    tbBestSelling.setRowHeight(rowHeight);
}

// Trong constructor hoặc nơi khởi tạo UI, thêm listener để tự động tái resize khi scroll pane thay đổi:




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblInvoiceCount;
    private javax.swing.JLabel lblProductCount;
    private javax.swing.JLabel lblUserCount;
    private javax.swing.JPanel panelAdmin;
    private javax.swing.JPanel panelInvoiceCount;
    private javax.swing.JPanel panelProductCount;
    private javax.swing.JPanel panelStatistic;
    private javax.swing.JPanel panelUserCount;
    private com.salesmate.component.RevenueLineChart revenueLineChart1;
    private javax.swing.JScrollPane spAdmin;
    private javax.swing.JScrollPane spBestSellingTable;
    private javax.swing.JTable tbBestSelling;
    // End of variables declaration//GEN-END:variables
}
